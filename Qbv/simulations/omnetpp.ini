[General]

simtime-resolution = fs#10e−15 s
simtime-scale = -15

**.configurator.assignDisjunctSubnetAddresses = false
**.configurator.addStaticRoutes = false
**.configurator.addSubnetRoutes = true
**.configurator.addDefaultRoutes = true
**.configurator.optimizeRoutes = false
**.configurator.dumpAddresses = true
**.configurator.dumpRoutes = true

#**.arpType = "GlobalARP"#非标准arp

[Config Qbv_1ms]

network = Qbv

*.configurator.config = xml("<config> \
                                <interface hosts='gPtpMaster' names='eth0' address='10.0.0.1'/> \
                                <interface hosts='standardHost0' names='eth0' address='10.0.0.3'/> \
                                <interface hosts='gPtpSlave0' names='eth0' address='10.0.0.2'/> \
								<interface hosts='gPtpSlave1' names='eth0' address='10.0.0.4'/> \
                             </config>")
warmup-period = 0.0019999999s ## first warmup-period seconds of the simulation will not be recorded into output vectors，避免第一个帧 arp探路的影响

**.standardHost0.**.vector-recording = false
**.standardHost0.**.scalar-recording = false
**.standardHost0.**.statistic-recording = false

**.hwClock.**.vector-recording = true

**.gPtpBridge0.tableGPTP.control_gate_table="00000000;10000000;01111111;00000000"

**.gPtpMaster.eth[*].queueType = ""#
**.gPtpSlave0.eth[*].queueType = ""#
**.gPtpSlave1.eth[*].queueType = ""#
**.gPtpBridge0.eth[*].queueType = "EtherQbvQueue"#
**.standardHost0.eth[*].queueType = ""

**.gPtpMaster.eth[*].encapType =  "Dot1QEncap"#
**.gPtpSlave0.eth[*].encapType =  "Dot1QEncap"#
**.gPtpSlave1.eth[*].encapType =  "Dot1QEncap"#
**.standardHost0.eth[*].encapType = "Dot1QEncap"

*.gPtpMaster.eth[0].etherGPTP.portType = 2
*.gPtpSlave0.eth[0].etherGPTP.portType = 1
*.gPtpSlave1.eth[0].etherGPTP.portType = 1

*.gPtpBridge0.eth[0].etherGPTP.portType = 1
*.gPtpBridge0.eth[2].etherGPTP.portType = 2 

*.gPtpBridge1.eth[0].etherGPTP.portType = 1
*.gPtpBridge1.eth[1].etherGPTP.portType = 2
*.gPtpBridge1.eth[2].etherGPTP.portType = 2 

*.standardHost0.numUdpApps = 2
*.standardHost0.udpApp[0].typename = "QbvUDPApp"
*.standardHost0.udpApp[0].packetName = "Standard"
*.standardHost0.udpApp[0].destAddresses = "gPtpSlave1"
*.standardHost0.udpApp[0].destPort = 1001
*.standardHost0.udpApp[0].messageLength = 500B
*.standardHost0.udpApp[0].sendInterval = 0.0625s
*.standardHost0.udpApp[0].startTime = 0.0025s
*.standardHost0.udpApp[0].tsn_destVlan = 1
*.standardHost0.udpApp[0].tsn_destpriority = 1
*.standardHost0.udpApp[0].TrafficPacketsPerSec =219000#219298正好1g

*.standardHost0.udpApp[1].typename = "QbvUDPApp"
*.standardHost0.udpApp[1].packetName = "Standard"
*.standardHost0.udpApp[1].destAddresses = "gPtpSlave1"
*.standardHost0.udpApp[1].destPort = 1000
*.standardHost0.udpApp[1].messageLength = 500B
*.standardHost0.udpApp[1].sendInterval = 0.0625s
*.standardHost0.udpApp[1].startTime = 0.0015s
*.standardHost0.udpApp[1].tsn_destVlan = 1
*.standardHost0.udpApp[1].tsn_destpriority = 1
*.standardHost0.udpApp[1].TrafficPacketsPerSec =0.0002#这是初始探路帧，standardHost0速度过快且在sync之前发送的话，有可能在bridge的mac那边阻塞sync的发送

*.gPtpMaster.numUdpApps = 1
*.gPtpMaster.udpApp[0].typename = "QbvUDPApp"
*.gPtpMaster.udpApp[0].packetName = "Master"
*.gPtpMaster.udpApp[0].destAddresses = "gPtpSlave0"
*.gPtpMaster.udpApp[0].destPort = 1000
*.gPtpMaster.udpApp[0].messageLength = 1400B
*.gPtpMaster.udpApp[0].sendInterval = 0.0625s
*.gPtpMaster.udpApp[0].startTime = 0.001005s
*.gPtpMaster.udpApp[0].tsn_destVlan = 0
*.gPtpMaster.udpApp[0].tsn_destpriority = 0
*.gPtpMaster.udpApp[0].TrafficPacketsPerSec =1000

*.gPtpSlave0.numUdpApps = 1
*.gPtpSlave0.udpApp[0].typename = "UDPSink"
*.gPtpSlave0.udpApp[0].localPort = 1000
*.gPtpSlave1.numUdpApps = 2
*.gPtpSlave1.udpApp[0].typename = "UDPSink"
*.gPtpSlave1.udpApp[0].localPort = 1000
*.gPtpSlave1.udpApp[1].typename = "UDPSink"
*.gPtpSlave1.udpApp[1].localPort = 1001


**.gPtpMaster.hwClockType = "ConstantDrift"
**.gPtpMaster.hwClock.constant_drift = 0
**.gPtpMaster.eth[0].etherGPTP.syncInterval=0.001

**.gPtpBridge0.hwClockType = "BoundedDrift"
**.gPtpBridge0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpBridge1.hwClockType = "BoundedDrift"
**.gPtpBridge1.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpSlave0.hwClockType = "BoundedDrift"
**.gPtpSlave0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpSlave1.hwClockType = "BoundedDrift"
**.gPtpSlave1.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

[Config Standard_1ms]


network = Qbv

*.configurator.config = xml("<config> \
                                <interface hosts='gPtpMaster' names='eth0' address='10.0.0.1'/> \
                                <interface hosts='standardHost0' names='eth0' address='10.0.0.3'/> \
                                <interface hosts='gPtpSlave0' names='eth0' address='10.0.0.2'/> \
								<interface hosts='gPtpSlave1' names='eth0' address='10.0.0.4'/> \
                             </config>")
warmup-period = 0.0019999999s ## first warmup-period seconds of the simulation will not be recorded into output vectors，避免第一个帧 arp探路的影响

**.standardHost0.**.vector-recording = false
**.standardHost0.**.scalar-recording = false
**.standardHost0.**.statistic-recording = false

**.hwClock.**.vector-recording = true

**.gPtpBridge0.tableGPTP.control_gate_table="11111111;11111111;11111111;11111111"

**.gPtpMaster.eth[*].queueType = ""#
**.gPtpSlave0.eth[*].queueType = ""#
**.gPtpSlave1.eth[*].queueType = ""#
**.gPtpBridge0.eth[*].queueType = "EtherQbvQueue"#如果没有外部queue，用mac内部queue，队列貌似是无限长
**.standardHost0.eth[*].queueType = ""

*.gPtpBridge0.eth[2].queue.queue[*].frameCapacity=100000

**.gPtpMaster.eth[*].encapType =  "Dot1QEncap"#
**.gPtpSlave0.eth[*].encapType =  "Dot1QEncap"#
**.gPtpSlave1.eth[*].encapType =  "Dot1QEncap"#
**.standardHost0.eth[*].encapType = "Dot1QEncap"

*.gPtpMaster.eth[0].etherGPTP.portType = 2
*.gPtpSlave0.eth[0].etherGPTP.portType = 1
*.gPtpSlave1.eth[0].etherGPTP.portType = 1

*.gPtpBridge0.eth[0].etherGPTP.portType = 1
*.gPtpBridge0.eth[2].etherGPTP.portType = 2 

*.gPtpBridge1.eth[0].etherGPTP.portType = 1
*.gPtpBridge1.eth[1].etherGPTP.portType = 2
*.gPtpBridge1.eth[2].etherGPTP.portType = 2 

*.standardHost0.numUdpApps = 2
*.standardHost0.udpApp[0].typename = "QbvUDPApp"
*.standardHost0.udpApp[0].packetName = "Standard"
*.standardHost0.udpApp[0].destAddresses = "gPtpSlave1"
*.standardHost0.udpApp[0].destPort = 1001
*.standardHost0.udpApp[0].messageLength = 500B
*.standardHost0.udpApp[0].sendInterval = 0.0625s
*.standardHost0.udpApp[0].startTime = 0.0025s
*.standardHost0.udpApp[0].tsn_destVlan = 1
*.standardHost0.udpApp[0].tsn_destpriority = 1
*.standardHost0.udpApp[0].TrafficPacketsPerSec =219298#219298正好1g

*.standardHost0.udpApp[1].typename = "QbvUDPApp"
*.standardHost0.udpApp[1].packetName = "Standard"
*.standardHost0.udpApp[1].destAddresses = "gPtpSlave1"
*.standardHost0.udpApp[1].destPort = 1000
*.standardHost0.udpApp[1].messageLength = 500B
*.standardHost0.udpApp[1].sendInterval = 0.0625s
*.standardHost0.udpApp[1].startTime = 0.0015s
*.standardHost0.udpApp[1].tsn_destVlan = 1
*.standardHost0.udpApp[1].tsn_destpriority = 1
*.standardHost0.udpApp[1].TrafficPacketsPerSec =0.0002#这是初始探路帧，standardHost0速度过快且在sync之前发送的话，有可能在bridge的mac那边阻塞sync的发送

*.gPtpMaster.numUdpApps = 1
*.gPtpMaster.udpApp[0].typename = "QbvUDPApp"
*.gPtpMaster.udpApp[0].packetName = "Master"
*.gPtpMaster.udpApp[0].destAddresses = "gPtpSlave0"
*.gPtpMaster.udpApp[0].destPort = 1000
*.gPtpMaster.udpApp[0].messageLength = 1400B
*.gPtpMaster.udpApp[0].sendInterval = 0.0625s
*.gPtpMaster.udpApp[0].startTime = 0.001005s
*.gPtpMaster.udpApp[0].tsn_destVlan = 0
*.gPtpMaster.udpApp[0].tsn_destpriority = 0
*.gPtpMaster.udpApp[0].TrafficPacketsPerSec =1000

*.gPtpSlave0.numUdpApps = 1
*.gPtpSlave0.udpApp[0].typename = "UDPSink"
*.gPtpSlave0.udpApp[0].localPort = 1000
*.gPtpSlave1.numUdpApps = 2
*.gPtpSlave1.udpApp[0].typename = "UDPSink"
*.gPtpSlave1.udpApp[0].localPort = 1000
*.gPtpSlave1.udpApp[1].typename = "UDPSink"
*.gPtpSlave1.udpApp[1].localPort = 1001


**.gPtpMaster.hwClockType = "ConstantDrift"
**.gPtpMaster.hwClock.constant_drift = 0
**.gPtpMaster.eth[0].etherGPTP.syncInterval=0.001

**.gPtpBridge0.hwClockType = "BoundedDrift"
**.gPtpBridge0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpBridge1.hwClockType = "BoundedDrift"
**.gPtpBridge1.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpSlave0.hwClockType = "BoundedDrift"
**.gPtpSlave0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpSlave1.hwClockType = "BoundedDrift"
**.gPtpSlave1.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

[Config Standard_1ms_NQOS]


network = Qbv

*.configurator.config = xml("<config> \
                                <interface hosts='gPtpMaster' names='eth0' address='10.0.0.1'/> \
                                <interface hosts='standardHost0' names='eth0' address='10.0.0.3'/> \
                                <interface hosts='gPtpSlave0' names='eth0' address='10.0.0.2'/> \
								<interface hosts='gPtpSlave1' names='eth0' address='10.0.0.4'/> \
                             </config>")
warmup-period = 0.0019999999s ## first warmup-period seconds of the simulation will not be recorded into output vectors，避免第一个帧 arp探路的影响

**.standardHost0.**.vector-recording = false
**.standardHost0.**.scalar-recording = false
**.standardHost0.**.statistic-recording = false

**.hwClock.**.vector-recording = true

**.gPtpBridge0.tableGPTP.control_gate_table="11111111;11111111;11111111;11111111"

**.gPtpMaster.eth[*].queueType = ""#
**.gPtpSlave0.eth[*].queueType = ""#
**.gPtpSlave1.eth[*].queueType = ""#
**.gPtpBridge0.eth[*].queueType = "EtherQbvQueue"#如果没有外部queue，用mac内部queue，队列貌似是无限长
**.standardHost0.eth[*].queueType = ""

*.gPtpBridge0.eth[2].queue.queue[*].frameCapacity=10000#若队列满，新来的帧直接删除

**.gPtpMaster.eth[*].encapType =  "Dot1QEncap"#
**.gPtpSlave0.eth[*].encapType =  "Dot1QEncap"#
**.gPtpSlave1.eth[*].encapType =  "Dot1QEncap"#
**.standardHost0.eth[*].encapType = "Dot1QEncap"

*.gPtpMaster.eth[0].etherGPTP.portType = 2
*.gPtpSlave0.eth[0].etherGPTP.portType = 1
*.gPtpSlave1.eth[0].etherGPTP.portType = 1

*.gPtpBridge0.eth[0].etherGPTP.portType = 1
*.gPtpBridge0.eth[2].etherGPTP.portType = 2 

*.gPtpBridge1.eth[0].etherGPTP.portType = 1
*.gPtpBridge1.eth[1].etherGPTP.portType = 2
*.gPtpBridge1.eth[2].etherGPTP.portType = 2 

*.standardHost0.numUdpApps = 2
*.standardHost0.udpApp[0].typename = "QbvUDPApp"
*.standardHost0.udpApp[0].packetName = "Standard"
*.standardHost0.udpApp[0].destAddresses = "gPtpSlave1"
*.standardHost0.udpApp[0].destPort = 1001
*.standardHost0.udpApp[0].messageLength = 500B
*.standardHost0.udpApp[0].sendInterval = 0.0625s
*.standardHost0.udpApp[0].startTime = 0.0025s
*.standardHost0.udpApp[0].tsn_destVlan = 1
*.standardHost0.udpApp[0].tsn_destpriority = 1
*.standardHost0.udpApp[0].TrafficPacketsPerSec =219298#219298正好1g

*.standardHost0.udpApp[1].typename = "QbvUDPApp"
*.standardHost0.udpApp[1].packetName = "Standard"
*.standardHost0.udpApp[1].destAddresses = "gPtpSlave1"
*.standardHost0.udpApp[1].destPort = 1000
*.standardHost0.udpApp[1].messageLength = 500B
*.standardHost0.udpApp[1].sendInterval = 0.0625s
*.standardHost0.udpApp[1].startTime = 0.0015s
*.standardHost0.udpApp[1].tsn_destVlan = 1
*.standardHost0.udpApp[1].tsn_destpriority = 1
*.standardHost0.udpApp[1].TrafficPacketsPerSec =0.0002#这是初始探路帧，standardHost0速度过快且在sync之前发送的话，有可能在bridge的mac那边阻塞sync的发送

*.gPtpMaster.numUdpApps = 1
*.gPtpMaster.udpApp[0].typename = "QbvUDPApp"
*.gPtpMaster.udpApp[0].packetName = "Master"
*.gPtpMaster.udpApp[0].destAddresses = "gPtpSlave0"
*.gPtpMaster.udpApp[0].destPort = 1000
*.gPtpMaster.udpApp[0].messageLength = 1400B
*.gPtpMaster.udpApp[0].sendInterval = 0.0625s
*.gPtpMaster.udpApp[0].startTime = 0.001005s
*.gPtpMaster.udpApp[0].tsn_destVlan = 0
*.gPtpMaster.udpApp[0].tsn_destpriority = 1
*.gPtpMaster.udpApp[0].TrafficPacketsPerSec =1000

*.gPtpSlave0.numUdpApps = 1
*.gPtpSlave0.udpApp[0].typename = "UDPSink"
*.gPtpSlave0.udpApp[0].localPort = 1000
*.gPtpSlave1.numUdpApps = 2
*.gPtpSlave1.udpApp[0].typename = "UDPSink"
*.gPtpSlave1.udpApp[0].localPort = 1000
*.gPtpSlave1.udpApp[1].typename = "UDPSink"
*.gPtpSlave1.udpApp[1].localPort = 1001


**.gPtpMaster.hwClockType = "ConstantDrift"
**.gPtpMaster.hwClock.constant_drift = 0
**.gPtpMaster.eth[0].etherGPTP.syncInterval=0.001

**.gPtpBridge0.hwClockType = "BoundedDrift"
**.gPtpBridge0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpBridge1.hwClockType = "BoundedDrift"
**.gPtpBridge1.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpSlave0.hwClockType = "BoundedDrift"
**.gPtpSlave0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpSlave1.hwClockType = "BoundedDrift"
**.gPtpSlave1.hwClock.drift_distribution = uniform(-1e-4, 1e-4)