[General]

simtime-resolution = fs#10e−15 s
simtime-scale = -15

**.configurator.assignDisjunctSubnetAddresses = false
**.configurator.addStaticRoutes = false
**.configurator.addSubnetRoutes = true
**.configurator.addDefaultRoutes = true
**.configurator.optimizeRoutes = false
**.configurator.dumpAddresses = true
**.configurator.dumpRoutes = true

#**.arpType = "GlobalARP"#非标准arp

[Config Network_with_cross_traffic]
#Network_with_cross_traffic网络同步精度比QBV高，可能是因为slave本身没有成为udpsink
network = NetworkWithCrossTraffic

*.configurator.config = xml("<config> \
                                <interface hosts='gPtpMaster' names='eth0' address='10.0.0.1'/> \
                                <interface hosts='gPtpSlave' names='eth0' address='10.0.0.2'/> \
                                <interface hosts='standardHost0' names='eth0' address='10.0.0.3'/> \
                                <interface hosts='standardHost1' names='eth0' address='10.0.0.4'/> \
                                <interface hosts='standardHost2' names='eth0' address='10.0.0.5'/> \
                                <interface hosts='standardHost3' names='eth0' address='10.0.0.6'/> \
                             </config>")

**.standardHost0.**.vector-recording = false
**.standardHost1.**.vector-recording = false
**.standardHost2.**.vector-recording = false
**.standardHost3.**.vector-recording = false

**.standardHost0.**.scalar-recording = false
**.standardHost1.**.scalar-recording = false
**.standardHost2.**.scalar-recording = false
**.standardHost3.**.scalar-recording = false

**.standardHost0.**.statistic-recording = false
**.standardHost1.**.statistic-recording = false
**.standardHost2.**.statistic-recording = false
**.standardHost3.**.statistic-recording = false

**.hwClock.**.vector-recording = true

*.gPtpMaster.eth[0].etherGPTP.portType = 2
*.gPtpSlave.eth[0].etherGPTP.portType = 1

*.gPtpBridge0.eth[0].etherGPTP.portType = 1
*.gPtpBridge0.eth[3].etherGPTP.portType = 2 

*.gPtpBridge1.eth[0].etherGPTP.portType = 1
*.gPtpBridge1.eth[3].etherGPTP.portType = 2

*.standardHost0.numUdpApps = 1
*.standardHost0.udpApp[0].typename = "UDPBasicApp"
*.standardHost0.udpApp[0].destAddresses = "standardHost3"
*.standardHost0.udpApp[0].destPort = 1000
*.standardHost0.udpApp[0].messageLength = 100B
*.standardHost0.udpApp[0].sendInterval = 0.0625s
*.standardHost1.numUdpApps = 1
*.standardHost1.udpApp[0].typename = "UDPSink"
*.standardHost1.udpApp[0].localPort = 1000

*.standardHost2.numUdpApps = 1
*.standardHost2.udpApp[0].typename = "UDPBasicApp"
*.standardHost2.udpApp[0].destAddresses = "standardHost1"
*.standardHost2.udpApp[0].destPort = 1000
*.standardHost2.udpApp[0].messageLength = 100B
*.standardHost2.udpApp[0].sendInterval = 0.0625s
*.standardHost3.numUdpApps = 1
*.standardHost3.udpApp[0].typename = "UDPSink"
*.standardHost3.udpApp[0].localPort = 1000

**.gPtpMaster.hwClockType = "ConstantDrift"
**.gPtpMaster.hwClock.constant_drift = 0

**.gPtpBridge0.hwClockType = "BoundedDrift"
**.gPtpBridge0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)
**.gPtpBridge1.hwClockType = "BoundedDrift"
**.gPtpBridge1.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpSlave.hwClockType = "BoundedDrift"
**.gPtpSlave.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

[Config Network_daisy_chain]

network = NetworkDaisyChain

**.hwClock.**.vector-recording = true

*.gPtpMaster.eth[0].etherGPTP.portType = 2
*.gPtpSlave0.eth[0].etherGPTP.portType = 1
*.gPtpSlave1.eth[0].etherGPTP.portType = 1
*.gPtpSlave2.eth[0].etherGPTP.portType = 1
*.gPtpSlave3.eth[0].etherGPTP.portType = 1
*.gPtpSlave4.eth[0].etherGPTP.portType = 1
*.gPtpSlave5.eth[0].etherGPTP.portType = 1
*.gPtpSlave6.eth[0].etherGPTP.portType = 1
*.gPtpSlave7.eth[0].etherGPTP.portType = 1

*.gPtpBridge0.eth[0].etherGPTP.portType = 1
*.gPtpBridge0.eth[1].etherGPTP.portType = 2 
*.gPtpBridge0.eth[2].etherGPTP.portType = 2 
*.gPtpBridge0.eth[3].etherGPTP.portType = 2 
*.gPtpBridge0.eth[4].etherGPTP.portType = 2 
*.gPtpBridge1.eth[0].etherGPTP.portType = 1
*.gPtpBridge1.eth[1].etherGPTP.portType = 2 
*.gPtpBridge1.eth[2].etherGPTP.portType = 2
*.gPtpBridge1.eth[3].etherGPTP.portType = 2
*.gPtpBridge1.eth[4].etherGPTP.portType = 2
*.gPtpBridge2.eth[0].etherGPTP.portType = 1
*.gPtpBridge2.eth[1].etherGPTP.portType = 2
*.gPtpBridge2.eth[2].etherGPTP.portType = 2

**.gPtpMaster.hwClockType = "ConstantDrift"
**.gPtpMaster.hwClock.constant_drift = 0

#BoundedDriftVariationd的随机性不够强，时间偏差仿真曲线很难看，平均值以及方差和BoundedDrift类似
**.gPtpBridge0.hwClockType = "BoundedDrift"
**.gPtpBridge0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)
**.gPtpBridge1.hwClockType = "BoundedDrift"
**.gPtpBridge1.hwClock.drift_distribution = uniform(-1e-4, 1e-4)
**.gPtpBridge2.hwClockType = "BoundedDrift"
**.gPtpBridge2.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpSlave0.hwClockType = "BoundedDrift"
**.gPtpSlave0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)
**.gPtpSlave1.hwClockType = "BoundedDrift"
**.gPtpSlave1.hwClock.drift_distribution = uniform(-1e-4, 1e-4)
**.gPtpSlave2.hwClockType = "BoundedDrift"
**.gPtpSlave2.hwClock.drift_distribution = uniform(-1e-4, 1e-4)
**.gPtpSlave3.hwClockType = "BoundedDrift"
**.gPtpSlave3.hwClock.drift_distribution = uniform(-1e-4, 1e-4)
**.gPtpSlave4.hwClockType = "BoundedDrift"
**.gPtpSlave4.hwClock.drift_distribution = uniform(-1e-4, 1e-4)
**.gPtpSlave5.hwClockType = "BoundedDrift"
**.gPtpSlave5.hwClock.drift_distribution = uniform(-1e-4, 1e-4)
**.gPtpSlave6.hwClockType = "BoundedDrift"
**.gPtpSlave6.hwClock.drift_distribution = uniform(-1e-4, 1e-4)
**.gPtpSlave7.hwClockType = "BoundedDrift"
**.gPtpSlave7.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

[Config Qbv]

network = Qbv

*.configurator.config = xml("<config> \
                                <interface hosts='gPtpMaster' names='eth0' address='10.0.0.1'/> \
                                <interface hosts='standardHost0' names='eth0' address='10.0.0.3'/> \
                                <interface hosts='gPtpSlave0' names='eth0' address='10.0.0.2'/> \
								<interface hosts='gPtpSlave1' names='eth0' address='10.0.0.4'/> \
                             </config>")
warmup-period = 0.019999999s ## first warmup-period seconds of the simulation will not be recorded into output vectors，避免第一个帧 arp探路的影响

**.standardHost0.**.vector-recording = false
**.standardHost0.**.scalar-recording = false
**.standardHost0.**.statistic-recording = false

**.hwClock.**.vector-recording = true

**.gPtpBridge0.tableGPTP.control_gate_table="00000000;10000000;01111111;00000000"
#**.gPtpBridge1.tableGPTP.control_gate_table="00000000;10000000;01111111;00000000"

**.gPtpMaster.eth[*].queueType = ""#
**.gPtpSlave0.eth[*].queueType = ""#
**.gPtpSlave1.eth[*].queueType = ""#
**.gPtpBridge0.eth[*].queueType = "EtherQbvQueue"#
**.standardHost0.eth[*].queueType = ""

**.gPtpMaster.eth[*].encapType =  "Dot1QEncap"#
**.gPtpSlave0.eth[*].encapType =  "Dot1QEncap"#
**.gPtpSlave1.eth[*].encapType =  "Dot1QEncap"#
**.standardHost0.eth[*].encapType = "Dot1QEncap"

*.gPtpMaster.eth[0].etherGPTP.portType = 2
*.gPtpSlave0.eth[0].etherGPTP.portType = 1
*.gPtpSlave1.eth[0].etherGPTP.portType = 1

*.gPtpBridge0.eth[0].etherGPTP.portType = 1
*.gPtpBridge0.eth[2].etherGPTP.portType = 2 

*.gPtpBridge1.eth[0].etherGPTP.portType = 1
*.gPtpBridge1.eth[1].etherGPTP.portType = 2
*.gPtpBridge1.eth[2].etherGPTP.portType = 2 

*.standardHost0.numUdpApps = 2
*.standardHost0.udpApp[0].typename = "QbvUDPApp"
*.standardHost0.udpApp[0].packetName = "Standard"
*.standardHost0.udpApp[0].destAddresses = "gPtpSlave1"
*.standardHost0.udpApp[0].destPort = 1001
*.standardHost0.udpApp[0].messageLength = 500B
*.standardHost0.udpApp[0].sendInterval = 0.0625s
*.standardHost0.udpApp[0].startTime = 0.025s
*.standardHost0.udpApp[0].tsn_destVlan = 1
*.standardHost0.udpApp[0].tsn_destpriority = 1
*.standardHost0.udpApp[0].TrafficPacketsPerSec =219000#219298正好1g

*.standardHost0.udpApp[1].typename = "QbvUDPApp"
*.standardHost0.udpApp[1].packetName = "Standard"
*.standardHost0.udpApp[1].destAddresses = "gPtpSlave1"
*.standardHost0.udpApp[1].destPort = 1000
*.standardHost0.udpApp[1].messageLength = 500B
*.standardHost0.udpApp[1].sendInterval = 0.0625s
*.standardHost0.udpApp[1].startTime = 0.015s
*.standardHost0.udpApp[1].tsn_destVlan = 1
*.standardHost0.udpApp[1].tsn_destpriority = 1
*.standardHost0.udpApp[1].TrafficPacketsPerSec =0.0002#这是初始探路帧，standardHost0速度过快且在sync之前发送的话，有可能在bridge的mac那边阻塞sync的发送

*.gPtpMaster.numUdpApps = 1
*.gPtpMaster.udpApp[0].typename = "QbvUDPApp"
*.gPtpMaster.udpApp[0].packetName = "Master"
*.gPtpMaster.udpApp[0].destAddresses = "gPtpSlave0"
*.gPtpMaster.udpApp[0].destPort = 1000
*.gPtpMaster.udpApp[0].messageLength = 1400B
*.gPtpMaster.udpApp[0].sendInterval = 0.0625s
*.gPtpMaster.udpApp[0].startTime = 0.010005s
*.gPtpMaster.udpApp[0].tsn_destVlan = 0
*.gPtpMaster.udpApp[0].tsn_destpriority = 0
*.gPtpMaster.udpApp[0].TrafficPacketsPerSec =100

*.gPtpSlave0.numUdpApps = 1
*.gPtpSlave0.udpApp[0].typename = "UDPSink"
*.gPtpSlave0.udpApp[0].localPort = 1000
*.gPtpSlave1.numUdpApps = 2
*.gPtpSlave1.udpApp[0].typename = "UDPSink"
*.gPtpSlave1.udpApp[0].localPort = 1000
*.gPtpSlave1.udpApp[1].typename = "UDPSink"
*.gPtpSlave1.udpApp[1].localPort = 1001


**.gPtpMaster.hwClockType = "ConstantDrift"
**.gPtpMaster.hwClock.constant_drift = 0

**.gPtpBridge0.hwClockType = "BoundedDrift"
**.gPtpBridge0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpSlave0.hwClockType = "BoundedDrift"
**.gPtpSlave0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpSlave1.hwClockType = "BoundedDrift"
**.gPtpSlave1.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

[Config Standard]


network = Qbv

*.configurator.config = xml("<config> \
                                <interface hosts='gPtpMaster' names='eth0' address='10.0.0.1'/> \
                                <interface hosts='standardHost0' names='eth0' address='10.0.0.3'/> \
                                <interface hosts='gPtpSlave0' names='eth0' address='10.0.0.2'/> \
								<interface hosts='gPtpSlave1' names='eth0' address='10.0.0.4'/> \
                             </config>")
warmup-period = 0.019999999s ## first warmup-period seconds of the simulation will not be recorded into output vectors，避免第一个帧 arp探路的影响

**.standardHost0.**.vector-recording = false
**.standardHost0.**.scalar-recording = false
**.standardHost0.**.statistic-recording = false

**.hwClock.**.vector-recording = true

**.gPtpBridge0.tableGPTP.control_gate_table="00000000;10000000;01111111;00000000"
#**.gPtpBridge1.tableGPTP.control_gate_table="00000000;10000000;01111111;00000000"

**.gPtpMaster.eth[*].queueType = ""#
**.gPtpSlave0.eth[*].queueType = ""#
**.gPtpSlave1.eth[*].queueType = ""#
**.gPtpBridge0.eth[*].queueType = ""#
**.standardHost0.eth[*].queueType = ""

**.gPtpMaster.eth[*].encapType =  "Dot1QEncap"#
**.gPtpSlave0.eth[*].encapType =  "Dot1QEncap"#
**.gPtpSlave1.eth[*].encapType =  "Dot1QEncap"#
**.standardHost0.eth[*].encapType = "Dot1QEncap"

*.gPtpMaster.eth[0].etherGPTP.portType = 2
*.gPtpSlave0.eth[0].etherGPTP.portType = 1
*.gPtpSlave1.eth[0].etherGPTP.portType = 1

*.gPtpBridge0.eth[0].etherGPTP.portType = 1
*.gPtpBridge0.eth[2].etherGPTP.portType = 2 

*.gPtpBridge1.eth[0].etherGPTP.portType = 1
*.gPtpBridge1.eth[1].etherGPTP.portType = 2
*.gPtpBridge1.eth[2].etherGPTP.portType = 2 

*.standardHost0.numUdpApps = 2
*.standardHost0.udpApp[0].typename = "QbvUDPApp"
*.standardHost0.udpApp[0].packetName = "Standard"
*.standardHost0.udpApp[0].destAddresses = "gPtpSlave1"
*.standardHost0.udpApp[0].destPort = 1001
*.standardHost0.udpApp[0].messageLength = 500B
*.standardHost0.udpApp[0].sendInterval = 0.0625s
*.standardHost0.udpApp[0].startTime = 0.025s
*.standardHost0.udpApp[0].tsn_destVlan = 1
*.standardHost0.udpApp[0].tsn_destpriority = 1
*.standardHost0.udpApp[0].TrafficPacketsPerSec =219000#219298正好1g

*.standardHost0.udpApp[1].typename = "QbvUDPApp"
*.standardHost0.udpApp[1].packetName = "Standard"
*.standardHost0.udpApp[1].destAddresses = "gPtpSlave1"
*.standardHost0.udpApp[1].destPort = 1000
*.standardHost0.udpApp[1].messageLength = 500B
*.standardHost0.udpApp[1].sendInterval = 0.0625s
*.standardHost0.udpApp[1].startTime = 0.015s
*.standardHost0.udpApp[1].tsn_destVlan = 1
*.standardHost0.udpApp[1].tsn_destpriority = 1
*.standardHost0.udpApp[1].TrafficPacketsPerSec =0.0002#这是初始探路帧，standardHost0速度过快且在sync之前发送的话，有可能在bridge的mac那边阻塞sync的发送

*.gPtpMaster.numUdpApps = 1
*.gPtpMaster.udpApp[0].typename = "QbvUDPApp"
*.gPtpMaster.udpApp[0].packetName = "Master"
*.gPtpMaster.udpApp[0].destAddresses = "gPtpSlave0"
*.gPtpMaster.udpApp[0].destPort = 1000
*.gPtpMaster.udpApp[0].messageLength = 1400B
*.gPtpMaster.udpApp[0].sendInterval = 0.0625s
*.gPtpMaster.udpApp[0].startTime = 0.010005s
*.gPtpMaster.udpApp[0].tsn_destVlan = 0
*.gPtpMaster.udpApp[0].tsn_destpriority = 0
*.gPtpMaster.udpApp[0].TrafficPacketsPerSec =100

*.gPtpSlave0.numUdpApps = 1
*.gPtpSlave0.udpApp[0].typename = "UDPSink"
*.gPtpSlave0.udpApp[0].localPort = 1000
*.gPtpSlave1.numUdpApps = 2
*.gPtpSlave1.udpApp[0].typename = "UDPSink"
*.gPtpSlave1.udpApp[0].localPort = 1000
*.gPtpSlave1.udpApp[1].typename = "UDPSink"
*.gPtpSlave1.udpApp[1].localPort = 1001


**.gPtpMaster.hwClockType = "ConstantDrift"
**.gPtpMaster.hwClock.constant_drift = 0

**.gPtpBridge0.hwClockType = "BoundedDrift"
**.gPtpBridge0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpSlave0.hwClockType = "BoundedDrift"
**.gPtpSlave0.hwClock.drift_distribution = uniform(-1e-4, 1e-4)

**.gPtpSlave1.hwClockType = "BoundedDrift"
**.gPtpSlave1.hwClock.drift_distribution = uniform(-1e-4, 1e-4)
